{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Damselfly phenomics\n",
    "\n",
    "For a more detailed description see: <https://www.phenopype.org/gallery/projects/damselfly-phenomics/>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "import phenopype as pp\n",
    "import os \n",
    "\n",
    "## my root directory - modify as you see fit \n",
    "os.chdir(r\"D:\\science\\packages\\phenopype\\phenopype-gallery_exec\")\n",
    "\n",
    "## my laptop has a small screen, so I use a smaller phenopype window\n",
    "pp._config.window_max_dim = 800"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Extract ROI from images\n",
    "\n",
    "To have an image size that is more easily manageable, the petridishes are detected and extracted with the `detect_mask` function shown in https://www.phenopype.org/gallery/project_7/. Then, using `save_ROI`, the region of interest (ROI) are saved, and used for the project creation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```{figure} ../_assets/images/damselfly-phenomics_circle-detection.jpg\n",
    "---\n",
    "width: 600px\n",
    "---\n",
    "Add a project-wide size and color reference that will be detected in the images. Don't forget to set the project-wide reference tag, which is useful in case your project uses multiple reference cards.\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using gray channel\n",
      "- found 1 contours that match criteria\n",
      "- found 1 contours that match criteria\n",
      "- found 1 contours that match criteria\n",
      "- found 1 contours that match criteria\n",
      "Found 4 circles\n",
      "saving ROI: odonata_roi_001.png\n",
      "saving ROI: odonata_roi_002.png\n",
      "saving ROI: odonata_roi_003.png\n",
      "saving ROI: odonata_roi_004.png\n"
     ]
    }
   ],
   "source": [
    "## load image\n",
    "\n",
    "data_dir = r\"data_raw\\damselfly-phenomics\"\n",
    "img_full = pp.load_image(os.path.join(data_dir,\"full-scan.jpg\"))\n",
    "\n",
    "## detect_mask needs single channel images\n",
    "gray = pp.preprocessing.decompose_image(img_full, channel=\"gray\")\n",
    "\n",
    "## detect circles \n",
    "circles = pp.preprocessing.detect_mask(\n",
    "    gray, shape=\"circle\", resize=0.25, circle_args={\n",
    "        \"param1\":200, \n",
    "        \"param2\":150,\n",
    "        \"min_dist\":1000, \n",
    "        \"min_radius\":600, \n",
    "        \"max_radius\":800}\n",
    "    )\n",
    "\n",
    "    \n",
    "## save all ROIs as separate jpeg files\n",
    "pp.export.save_ROI(\n",
    "    image=img_full, \n",
    "    annotations=circles, \n",
    "    file_name=\"odonata\",\n",
    "    suffix=\"roi\",\n",
    "    dir_path=data_dir\n",
    "    )\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Make phenopype project\n",
    "\n",
    "Create a phenopype project (remember, `Project` is used to both create new projects, and load existing ones). Different phenopype projects can be useful, e.g., to process different batches of images from field seasons, perspectives, etc,. It makes sense to create them side by side in a subfolder, which I call \"phenopype\". Thus, my research projects often have the following directory structure (just my way of working - this is really totally up to you):\n",
    "\n",
    "```\n",
    "my-project\n",
    "    data                       # processed data (e.g., tables)\n",
    "    data_raw                   # raw data (images, videos, etc.)\n",
    "    phenopype                  # phenopype projects\n",
    "    phenopype_templates        # phenopype .yaml config templates\n",
    "    scripts                    # python, R, etc.\n",
    "    [...]                      # manuscripts, figures, literature, etc.\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------\n",
      "Creating a new phenopype project directory at:\n",
      "D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\damselfly-phenomics\n",
      "\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Proceed? (y/n)\n",
      " y\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Project \"damselfly-phenomics\" successfully created.\n",
      "--------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "proj = pp.Project(r\"phenopype\\damselfly-phenomics\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------\n",
      "phenopype will search for image files at\n",
      "\n",
      "D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\data_raw\\damselfly-phenomics\n",
      "\n",
      "using the following settings:\n",
      "\n",
      "filetypes: ['jpg', 'JPG', 'jpeg', 'JPEG', 'tif', 'png', 'bmp'], include: roi, exclude: [], mode: link, recursive: False, resize: False, unique: path\n",
      "\n",
      "Found image odonata_roi_001.png - phenopype-project folder 0__odonata_roi_001 created\n",
      "Found image odonata_roi_002.png - phenopype-project folder 0__odonata_roi_002 created\n",
      "Found image odonata_roi_003.png - phenopype-project folder 0__odonata_roi_003 created\n",
      "Found image odonata_roi_004.png - phenopype-project folder 0__odonata_roi_004 created\n",
      "\n",
      "Found 4 files - using all\n",
      "--------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "## add tooth-images from the data folder, but exclude the images containing multiple teeth \n",
    "proj.add_files(image_dir = r\"data_raw\\damselfly-phenomics\", include=\"roi\", mode=\"link\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\damselfly-phenomics\\data\\0__odonata_roi_001\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\damselfly-phenomics\\data\\0__odonata_roi_002\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\damselfly-phenomics\\data\\0__odonata_roi_003\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\damselfly-phenomics\\data\\0__odonata_roi_004\\pype_config_v1.yaml\n"
     ]
    }
   ],
   "source": [
    "## add the config template; provide a tag\n",
    "proj.add_config(template_path=r\"phenopype_templates\\damselfly-phenomics.yaml\", tag=\"v1\", overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "Stage: fixed method name\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Updating pype config: applying staged changes\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2022-07-29 11:40:07 +++--------------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "PREPROCESSING\n",
      "write_comment\n",
      "ID\n",
      "blur\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "threshold\n",
      "- decompose image: using blue channel\n",
      "morphology\n",
      "morphology\n",
      "detect_contour\n",
      "- found 1 contours that match criteria\n",
      "edit_contour\n",
      "detect_contour\n",
      "- found 1 contours that match criteria\n",
      "edit_contour\n",
      "BREAK\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2022-07-29 11:40:30 +++--------------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "PREPROCESSING\n",
      "write_comment\n",
      "- loaded existing annotation of type \"comment\" with ID \"a\": skipping (edit=False)\n",
      "blur\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "threshold\n",
      "- decompose image: using green channel\n",
      "morphology\n",
      "morphology\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"a\": overwriting (edit=overwrite)\n",
      "- found 1 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"a\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"b\": overwriting (edit=overwrite)\n",
      "- found 1 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"b\": skipping (edit=False)\n",
      "detect_contour\n",
      "- found 1 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "draw_contour\n",
      "draw_contour\n",
      "\n",
      "\n",
      "EXPORT\n",
      "save_canvas\n",
      "- image saved under D:\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_9\\data\\0__odonata_roi_00\\canvas_v1.jpg.\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"contour\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"contour\" with id \"b\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"contour\" with id \"c\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"drawing\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"drawing\" with id \"b\" to \"annotations_v1.json\"\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "AUTOSHOW\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2022-07-29 11:40:34 +++--------------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "PREPROCESSING\n",
      "write_comment\n",
      "- loaded existing annotation of type \"comment\" with ID \"a\": skipping (edit=False)\n",
      "blur\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "threshold\n",
      "- decompose image: using green channel\n",
      "morphology\n",
      "morphology\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"a\": overwriting (edit=overwrite)\n",
      "- found 1 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"a\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"b\": overwriting (edit=overwrite)\n",
      "- found 1 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"b\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"c\": overwriting (edit=overwrite)\n",
      "- found 1 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "draw_contour\n",
      "draw_contour\n",
      "\n",
      "\n",
      "EXPORT\n",
      "save_canvas\n",
      "- image saved under D:\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_9\\data\\0__odonata_roi_00\\canvas_v1.jpg (overwritten).\n",
      "save_annotation\n",
      "- loading existing annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- updating annotations of type \"comment\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"contour\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"contour\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"contour\" with id \"c\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"drawing\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"drawing\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "AUTOSHOW\n",
      "- STILL UPDATING CONFIG (no content)\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2022-07-29 11:40:41 +++--------------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "PREPROCESSING\n",
      "write_comment\n",
      "- loaded existing annotation of type \"comment\" with ID \"a\": skipping (edit=False)\n",
      "blur\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "threshold\n",
      "- decompose image: using red channel\n",
      "morphology\n",
      "morphology\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"a\": overwriting (edit=overwrite)\n",
      "- found 1 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"a\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"b\": overwriting (edit=overwrite)\n",
      "- found 1 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"b\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"c\": overwriting (edit=overwrite)\n",
      "- found 1 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "draw_contour\n",
      "draw_contour\n",
      "\n",
      "\n",
      "EXPORT\n",
      "save_canvas\n",
      "- image saved under D:\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_9\\data\\0__odonata_roi_00\\canvas_v1.jpg (overwritten).\n",
      "save_annotation\n",
      "- loading existing annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- updating annotations of type \"comment\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"contour\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"contour\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"contour\" with id \"c\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"drawing\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"drawing\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "AUTOSHOW\n"
     ]
    },
    {
     "ename": "SystemExit",
     "evalue": "\n\nTERMINATE (by user)",
     "output_type": "error",
     "traceback": [
      "An exception has occurred, use %tb to see the full traceback.\n",
      "\u001b[1;31mSystemExit\u001b[0m\u001b[1;31m:\u001b[0m \n\nTERMINATE (by user)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Miniconda3\\envs\\pp-dev\\lib\\site-packages\\IPython\\core\\interactiveshell.py:3560: UserWarning: To exit: use 'exit', 'quit', or Ctrl-D.\n",
      "  warn(\"To exit: use 'exit', 'quit', or Ctrl-D.\", stacklevel=1)\n"
     ]
    }
   ],
   "source": [
    "## run image processing\n",
    "for path in proj.dir_paths:\n",
    "    pp.Pype(path, tag=\"v1\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Modify config to extract shape and texture features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "# phenopype gallery project 9\n",
      "# ----------------------------\n",
      "# segment damselflies and quantify shape and texture of their body parts\n",
      "\n",
      "config_info:\n",
      "    config_name: pype_config_v1.yaml\n",
      "    date_created: '2022-01-20 19:23:30'\n",
      "    date_last_modified:\n",
      "    template_name: gallery_project_9.yaml\n",
      "    template_path: D:\\workspace\\git-repos\\phenopype\\phenopype-templates\\templates\\gallery\\gallery_project_9.yaml\n",
      "processing_steps:\n",
      "    - preprocessing:\n",
      "        - write_comment:\n",
      "            ANNOTATION: {type: comment, id: a, edit: false}\n",
      "            label: ID\n",
      "        - blur:\n",
      "            kernel_size: 5\n",
      "    - segmentation:\n",
      "        - threshold:\n",
      "            method: binary\n",
      "            value: 90\n",
      "            channel: blue\n",
      "        - morphology:\n",
      "            operation: open\n",
      "            shape: cross\n",
      "            kernel_size: 7\n",
      "            iterations: 2\n",
      "        - morphology:\n",
      "            operation: close\n",
      "            shape: ellipse\n",
      "            kernel_size: 5\n",
      "            iterations: 3\n",
      "        - detect_contour:\n",
      "            ANNOTATION: {type: contour, id: a, edit: overwrite}\n",
      "            min_diameter: 0\n",
      "            min_area: 10000\n",
      "        - edit_contour:\n",
      "            ANNOTATION: {type: drawing, id: a, edit: false}\n",
      "            overlay_blend: 0\n",
      "            overlay_line_width: 1\n",
      "        - detect_contour:\n",
      "            ANNOTATION: {type: contour, id: b, edit: overwrite}\n",
      "            min_diameter: 0\n",
      "            min_area: 10000\n",
      "        - edit_contour:\n",
      "            ANNOTATION: {type: drawing, id: b, edit: false}\n",
      "            overlay_blend: 0\n",
      "            overlay_line_width: 1\n",
      "        - detect_contour:\n",
      "            ANNOTATION: {type: contour, id: c, edit: overwrite}\n",
      "    - visualization:\n",
      "        - draw_contour:\n",
      "            contour_id: b\n",
      "        - draw_contour:\n",
      "            contour_id: c\n",
      "            line_colour: aqua\n",
      "    - measurement:\n",
      "        - compute_shape_features:\n",
      "            contour_id: b\n",
      "        - compute_shape_features:\n",
      "            contour_id: c\n",
      "        - compute_texture_features:\n",
      "            channels: [r, g, b, h, s, v]\n",
      "            contour_id: b\n",
      "        - compute_texture_features:\n",
      "            channels: [r, g, b, h, s, v]\n",
      "            contour_id: c\n",
      "    - export:\n",
      "        - save_canvas:\n",
      "            resize: 1\n",
      "        - save_annotation:\n",
      "            overwrite: true\n",
      "\n",
      "This is what the new config may look like (can differ beteeen files) - proceed?y\n",
      "New config saved for 0__odonata_roi_00\n",
      "New config saved for 0__odonata_roi_01\n",
      "New config saved for 0__odonata_roi_02\n",
      "New config saved for 0__odonata_roi_03\n"
     ]
    }
   ],
   "source": [
    "target1 = \"\"\"    - export:\"\"\"\n",
    "replacement1 = \"\"\"    - measurement:\n",
    "        - compute_shape_features:\n",
    "            contour_id: b\n",
    "        - compute_shape_features:\n",
    "            contour_id: c\n",
    "        - compute_texture_features:\n",
    "            channels: [r, g, b, h, s, v]\n",
    "            contour_id: b\n",
    "        - compute_texture_features:\n",
    "            channels: [r, g, b, h, s, v]\n",
    "            contour_id: c\n",
    "    - export:\"\"\"\n",
    "\n",
    "proj.edit_config(tag=\"v1\", target=target1, replacement=replacement1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Format path to abspath\n",
      "- no annotation_type selected - returning all annotations\n",
      "\n",
      "AUTOLOAD\n",
      "- annotations loaded:\n",
      "{\n",
      "\"comment\": [\"a\"],\n",
      "\"contour\": [\"a\", \"b\", \"c\"],\n",
      "\"drawing\": [\"a\", \"b\"]\n",
      "}\n",
      "updating pype config file\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2022-01-20 19:26:25 +++--------------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "PREPROCESSING\n",
      "write_comment\n",
      "- loaded existing annotation of type \"comment\" with ID \"a\": skipping (edit=False)\n",
      "blur\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "threshold\n",
      "- decompose image: using blue channel\n",
      "morphology\n",
      "morphology\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"a\": overwriting (edit=overwrite)\n",
      "- found 1 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"a\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"b\": overwriting (edit=overwrite)\n",
      "- found 1 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"b\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"c\": overwriting (edit=overwrite)\n",
      "- found 4 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "draw_contour\n",
      "draw_contour\n",
      "\n",
      "\n",
      "MEASUREMENT\n",
      "compute_shape_features\n",
      "compute_shape_features\n",
      "compute_texture_features\n",
      "- decompose image: using r channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing r channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00,  8.08it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using g channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing g channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 20.83it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using b channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing b channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 20.82it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using h channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing h channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 20.82it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using s channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing s channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 20.83it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using v channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing v channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 20.83it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "compute_texture_features\n",
      "- decompose image: using r channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing r channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 33.18it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using g channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing g channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 33.33it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using b channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing b channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 33.72it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using h channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing h channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 33.89it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using s channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing s channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 33.59it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using v channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing v channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 33.33it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "EXPORT\n",
      "save_canvas\n",
      "- image saved under D:\\workspace\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_9\\project\\data\\0__odonata_roi_00\\canvas_v1.jpg (overwritten).\n",
      "save_annotation\n",
      "- loading existing annotation file\n",
      "- updating annotation of type \"comment\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"c\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"drawing\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"drawing\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- writing annotation of type \"shape_features\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotation of type \"shape_features\" with id \"b\" to \"annotations_v1.json\"\n",
      "- writing annotation of type \"texture_features\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotation of type \"texture_features\" with id \"b\" to \"annotations_v1.json\"\n",
      "updating pype config file\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "TERMINATE\n",
      "\n",
      "AUTOSAVE\n",
      "- nothing to autosave\n",
      "Format path to abspath\n",
      "- no annotation_type selected - returning all annotations\n",
      "\n",
      "AUTOLOAD\n",
      "- annotations loaded:\n",
      "{\n",
      "\"comment\": [\"a\"],\n",
      "\"contour\": [\"a\", \"b\", \"c\"],\n",
      "\"drawing\": [\"a\", \"b\"]\n",
      "}\n",
      "Fixed method name\n",
      "updating pype config file\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2022-01-20 19:26:27 +++--------------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "PREPROCESSING\n",
      "comment\n",
      "Fixed method name\n",
      "- loaded existing annotation of type \"comment\" with ID \"a\": skipping (edit=False)\n",
      "blur\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "threshold\n",
      "- decompose image: using blue channel\n",
      "morphology\n",
      "morphology\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"a\": overwriting (edit=overwrite)\n",
      "- found 3 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"a\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"b\": overwriting (edit=overwrite)\n",
      "- found 1 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"b\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"c\": overwriting (edit=overwrite)\n",
      "- found 4 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "draw_contour\n",
      "draw_contour\n",
      "\n",
      "\n",
      "MEASUREMENT\n",
      "compute_shape_features\n",
      "compute_shape_features\n",
      "compute_texture_features\n",
      "- decompose image: using r channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing r channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 27.04it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using g channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing g channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 27.01it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using b channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing b channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 27.76it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using h channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing h channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 28.57it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using s channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing s channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 27.76it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using v channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing v channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 27.01it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "compute_texture_features\n",
      "- decompose image: using r channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing r channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 35.72it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using g channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing g channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 36.17it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using b channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing b channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 35.71it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using h channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing h channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 35.84it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using s channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing s channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 35.72it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using v channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing v channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 35.38it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "EXPORT\n",
      "save_canvas\n",
      "- image saved under D:\\workspace\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_9\\project\\data\\0__odonata_roi_01\\canvas_v1.jpg (overwritten).\n",
      "save_annotation\n",
      "- loading existing annotation file\n",
      "- updating annotation of type \"comment\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"c\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"drawing\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"drawing\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- writing annotation of type \"shape_features\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotation of type \"shape_features\" with id \"b\" to \"annotations_v1.json\"\n",
      "- writing annotation of type \"texture_features\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotation of type \"texture_features\" with id \"b\" to \"annotations_v1.json\"\n",
      "updating pype config file\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "TERMINATE\n",
      "\n",
      "AUTOSAVE\n",
      "- nothing to autosave\n",
      "Format path to abspath\n",
      "- no annotation_type selected - returning all annotations\n",
      "\n",
      "AUTOLOAD\n",
      "- annotations loaded:\n",
      "{\n",
      "\"comment\": [\"a\"],\n",
      "\"contour\": [\"a\", \"b\", \"c\"],\n",
      "\"drawing\": [\"a\", \"b\"]\n",
      "}\n",
      "Fixed method name\n",
      "updating pype config file\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2022-01-20 19:26:28 +++--------------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "PREPROCESSING\n",
      "comment\n",
      "Fixed method name\n",
      "- loaded existing annotation of type \"comment\" with ID \"a\": skipping (edit=False)\n",
      "blur\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "threshold\n",
      "- decompose image: using blue channel\n",
      "morphology\n",
      "morphology\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"a\": overwriting (edit=overwrite)\n",
      "- found 2 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"a\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"b\": overwriting (edit=overwrite)\n",
      "- found 1 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"b\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"c\": overwriting (edit=overwrite)\n",
      "- found 4 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "draw_contour\n",
      "draw_contour\n",
      "\n",
      "\n",
      "MEASUREMENT\n",
      "compute_shape_features\n",
      "compute_shape_features\n",
      "compute_texture_features\n",
      "- decompose image: using r channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing r channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 24.39it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using g channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing g channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 24.37it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using b channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing b channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 24.39it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using h channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing h channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 24.36it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using s channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing s channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 24.06it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using v channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing v channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 23.81it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "compute_texture_features\n",
      "- decompose image: using r channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing r channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 33.62it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using g channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing g channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 33.90it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using b channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing b channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 33.73it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using h channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing h channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 34.26it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using s channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing s channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 34.48it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using v channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing v channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 34.31it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "EXPORT\n",
      "save_canvas\n",
      "- image saved under D:\\workspace\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_9\\project\\data\\0__odonata_roi_02\\canvas_v1.jpg (overwritten).\n",
      "save_annotation\n",
      "- loading existing annotation file\n",
      "- updating annotation of type \"comment\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"c\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"drawing\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"drawing\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- writing annotation of type \"shape_features\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotation of type \"shape_features\" with id \"b\" to \"annotations_v1.json\"\n",
      "- writing annotation of type \"texture_features\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotation of type \"texture_features\" with id \"b\" to \"annotations_v1.json\"\n",
      "updating pype config file\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "TERMINATE\n",
      "\n",
      "AUTOSAVE\n",
      "- nothing to autosave\n",
      "Format path to abspath\n",
      "- no annotation_type selected - returning all annotations\n",
      "\n",
      "AUTOLOAD\n",
      "- annotations loaded:\n",
      "{\n",
      "\"comment\": [\"a\"],\n",
      "\"contour\": [\"a\", \"b\", \"c\"],\n",
      "\"drawing\": [\"a\", \"b\"]\n",
      "}\n",
      "Fixed method name\n",
      "updating pype config file\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2022-01-20 19:26:30 +++--------------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "PREPROCESSING\n",
      "comment\n",
      "Fixed method name\n",
      "- loaded existing annotation of type \"comment\" with ID \"a\": skipping (edit=False)\n",
      "blur\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "threshold\n",
      "- decompose image: using blue channel\n",
      "morphology\n",
      "morphology\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"a\": overwriting (edit=overwrite)\n",
      "- found 1 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"a\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"b\": overwriting (edit=overwrite)\n",
      "- found 1 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"b\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"c\": overwriting (edit=overwrite)\n",
      "- found 4 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "draw_contour\n",
      "draw_contour\n",
      "\n",
      "\n",
      "MEASUREMENT\n",
      "compute_shape_features\n",
      "compute_shape_features\n",
      "compute_texture_features\n",
      "- decompose image: using r channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing r channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 19.60it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using g channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing g channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 19.60it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using b channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing b channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 20.00it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using h channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing h channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 20.36it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using s channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing s channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 19.60it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using v channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing v channel texture features: 100%|█████████████████████████████████████████████| 1/1 [00:00<00:00, 19.21it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "compute_texture_features\n",
      "- decompose image: using r channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing r channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 32.52it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using g channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing g channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 32.77it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using b channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing b channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 32.77it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using h channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing h channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 32.52it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using s channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing s channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 31.34it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- decompose image: using v channel\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing v channel texture features: 100%|█████████████████████████████████████████████| 4/4 [00:00<00:00, 32.52it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "EXPORT\n",
      "save_canvas\n",
      "- image saved under D:\\workspace\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_9\\project\\data\\0__odonata_roi_03\\canvas_v1.jpg (overwritten).\n",
      "save_annotation\n",
      "- loading existing annotation file\n",
      "- updating annotation of type \"comment\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"c\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"drawing\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"drawing\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- writing annotation of type \"shape_features\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotation of type \"shape_features\" with id \"b\" to \"annotations_v1.json\"\n",
      "- writing annotation of type \"texture_features\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotation of type \"texture_features\" with id \"b\" to \"annotations_v1.json\"\n",
      "updating pype config file\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "TERMINATE\n",
      "\n",
      "AUTOSAVE\n",
      "- nothing to autosave\n"
     ]
    }
   ],
   "source": [
    "## run image processing with deactivated feedback \n",
    "for path in proj.dir_paths:\n",
    "    pp.Pype(path, tag=\"v1\", feedback=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Created D:\\workspace\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_9\\project\\results\\annotations\n",
      "Search string: ['annotations_v1']\n",
      "Collected annotations_v1.json from 0__odonata_roi_00\n",
      "0__odonata_roi_00_annotations_v1.json saved under D:\\workspace\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_9\\project\\results\\annotations\\0__odonata_roi_00_annotations_v1.json.\n",
      "Collected annotations_v1.json from 0__odonata_roi_01\n",
      "0__odonata_roi_01_annotations_v1.json saved under D:\\workspace\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_9\\project\\results\\annotations\\0__odonata_roi_01_annotations_v1.json.\n",
      "Collected annotations_v1.json from 0__odonata_roi_02\n",
      "0__odonata_roi_02_annotations_v1.json saved under D:\\workspace\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_9\\project\\results\\annotations\\0__odonata_roi_02_annotations_v1.json.\n",
      "Collected annotations_v1.json from 0__odonata_roi_03\n",
      "0__odonata_roi_03_annotations_v1.json saved under D:\\workspace\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_9\\project\\results\\annotations\\0__odonata_roi_03_annotations_v1.json.\n"
     ]
    }
   ],
   "source": [
    "proj.collect_results(files=[\"canvas\", \"shape\", \"texture\"], tag=\"v1\", aggregate_csv=True, overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.18"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
