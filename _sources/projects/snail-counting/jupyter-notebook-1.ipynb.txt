{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Counting snails\n",
    "\n",
    "For a more detailed description see: <https://www.phenopype.org/gallery/projects/snail-counting/>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "phenopype successfully imported the following plugin dependencies:\n",
      "torch\n"
     ]
    }
   ],
   "source": [
    "import phenopype as pp\n",
    "import os \n",
    "\n",
    "## my root directory - modify as you see fit \n",
    "os.chdir(r\"D:\\science\\packages\\phenopype\\phenopype-gallery_exec\")\n",
    "\n",
    "## my laptop has a small screen, so I use a smaller phenopype window\n",
    "pp._config.window_max_dim = 800"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Make phenopype project\n",
    "\n",
    "Create a phenopype project (remember, `Project` is used to both create new projects, and load existing ones). Different phenopype projects can be useful, e.g., to process different batches of images from field seasons, perspectives, etc,. It makes sense to create them side by side in a subfolder, which I call \"phenopype\". Thus, my research projects often have the following directory structure (just my way of working - this is really totally up to you):\n",
    "\n",
    "```\n",
    "my-project\n",
    "    data                       # processed data (e.g., tables)\n",
    "    data_raw                   # raw data (images, videos, etc.)\n",
    "    phenopype                  # phenopype projects\n",
    "    phenopype_templates        # phenopype .yaml config templates\n",
    "    scripts                    # python, R, etc.\n",
    "    [...]                      # manuscripts, figures, literature, etc.\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------\n",
      "Creating a new phenopype project directory at:\n",
      "D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\snail-counting\n",
      "\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Proceed? (y/n)\n",
      " y\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Project \"snail-counting\" successfully created.\n",
      "--------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "proj = pp.Project(r\"phenopype\\snail-counting\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------\n",
      "phenopype will search for image files at\n",
      "\n",
      "D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\data_raw\\snail-counting\n",
      "\n",
      "using the following settings:\n",
      "\n",
      "filetypes: ['jpg', 'JPG', 'jpeg', 'JPEG', 'tif', 'png', 'bmp'], include: [], exclude: [], mode: copy, recursive: False, resize: False, unique: path\n",
      "\n",
      "Found image snails1.jpg - phenopype-project folder 0__snails1 created\n",
      "Found image snails2.jpg - phenopype-project folder 0__snails2 created\n",
      "\n",
      "Found 2 files - using all\n",
      "--------------------------------------------\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\snail-counting\\data\\0__snails1\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\snail-counting\\data\\0__snails2\\pype_config_v1.yaml\n"
     ]
    }
   ],
   "source": [
    "proj.add_files(image_dir = r\"data_raw\\snail-counting\")\n",
    "proj.add_config(template_path=r\"phenopype_templates\\snail-counting_template1.yaml\", tag=\"v1\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Updating pype config: applying staged changes\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2022-07-06 16:57:01 +++--------------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "PREPROCESSING\n",
      "create_mask\n",
      "create_reference\n",
      "Reference set\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "threshold\n",
      "- multichannel image supplied, converting to grayscale\n",
      "- decompose image: using gray channel\n",
      "- including pixels from 1 drawn masks \n",
      "- excluding pixels from reference\n",
      "detect_contour\n",
      "- found 4270 contours that match criteria\n",
      "watershed\n",
      "- even kernel size supplied, adding 1 to make odd\n",
      "- found 247 contours that match criteria\n",
      "detect_contour\n",
      "- found 126 contours that match criteria\n",
      "edit_contour\n",
      "detect_contour\n",
      "- found 117 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "select_canvas\n",
      "- raw image\n",
      "draw_contour\n",
      "draw_mask\n",
      "\n",
      "\n",
      "EXPORT\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"mask\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"reference\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"contour\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"contour\" with id \"b\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"contour\" with id \"c\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"drawing\" with id \"a\" to \"annotations_v1.json\"\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "AUTOSHOW\n",
      "\n",
      "\n",
      "TERMINATE\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_6\\data\\0__snails1\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Updating pype config: applying staged changes\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2022-07-06 16:57:38 +++--------------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "PREPROCESSING\n",
      "create_mask\n",
      "create_reference\n",
      "Reference set\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "threshold\n",
      "- multichannel image supplied, converting to grayscale\n",
      "- decompose image: using gray channel\n",
      "- including pixels from 1 drawn masks \n",
      "- excluding pixels from reference\n",
      "detect_contour\n",
      "- found 3620 contours that match criteria\n",
      "watershed\n",
      "- even kernel size supplied, adding 1 to make odd\n",
      "- found 154 contours that match criteria\n",
      "detect_contour\n",
      "- found 83 contours that match criteria\n",
      "edit_contour\n",
      "detect_contour\n",
      "- found 73 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "select_canvas\n",
      "- raw image\n",
      "draw_contour\n",
      "draw_mask\n",
      "\n",
      "\n",
      "EXPORT\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"mask\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"reference\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"contour\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"contour\" with id \"b\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"contour\" with id \"c\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"drawing\" with id \"a\" to \"annotations_v1.json\"\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "AUTOSHOW\n",
      "\n",
      "\n",
      "TERMINATE\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_6\\data\\0__snails2\\canvas_v1.jpg.\n"
     ]
    }
   ],
   "source": [
    "## run image processing\n",
    "for path in proj.dir_paths:\n",
    "    pp.Pype(path, tag=\"v1\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Edit config to extract shape features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "# phenopype gallery project 6\n",
      "# ---------------------------\n",
      "# count small freshwater snails and separate overlapping specimens\n",
      "\n",
      "config_info:\n",
      "    config_name: pype_config_v1.yaml\n",
      "    date_created: '2022-07-06 16:56:58'\n",
      "    date_last_modified:\n",
      "    template_name: gallery_project_6.yaml\n",
      "    template_path: D:\\git-repos\\phenopype\\phenopype-templates\\templates\\gallery\\gallery_project_6.yaml\n",
      "processing_steps:\n",
      "    - preprocessing:\n",
      "        - create_mask:\n",
      "            ANNOTATION: {type: mask, id: a, edit: false}\n",
      "            tool: rectangle\n",
      "        - create_reference:\n",
      "            ANNOTATION: {type: reference, id: a, edit: false}\n",
      "    - segmentation:\n",
      "        - threshold:\n",
      "            method: adaptive\n",
      "            blocksize: 99\n",
      "            constant: 3\n",
      "        - detect_contour:\n",
      "            ANNOTATION: {type: contour, id: a, edit: overwrite}\n",
      "        - watershed:\n",
      "            distance_cutoff: 0.7\n",
      "        - detect_contour:\n",
      "            ANNOTATION: {type: contour, id: b, edit: overwrite}\n",
      "            min_area: 100\n",
      "        - edit_contour:\n",
      "            ANNOTATION: {type: drawing, id: a, edit: false}\n",
      "        - detect_contour:\n",
      "            ANNOTATION: {type: contour, id: c, edit: overwrite}\n",
      "            min_area: 100\n",
      "    - measurement:\n",
      "        - compute_shape_features\n",
      "        - compute_texture_features\n",
      "    - visualization:\n",
      "        - select_canvas:\n",
      "            canvas: raw\n",
      "        - draw_contour:\n",
      "            line_width: 1\n",
      "        - draw_mask:\n",
      "            line_width: 2\n",
      "            line_colour: aqua\n",
      "    - export:\n",
      "        - save_annotation:\n",
      "            overwrite: true\n",
      "\n",
      "This is what the new config may look like (can differ beteeen files) - proceed?y\n",
      "New config saved for 0__snails1\n",
      "New config saved for 0__snails2\n"
     ]
    }
   ],
   "source": [
    "target1 = \"\"\"    - measurement:\"\"\"\n",
    "replacement1 = \"\"\"    - measurement:\n",
    "        - compute_shape_features\n",
    "        - compute_texture_features\"\"\"\n",
    "\n",
    "proj.edit_config(tag=\"v1\", target=target1, replacement=replacement1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "AUTOLOAD\n",
      "- annotations loaded:\n",
      "{\n",
      "\"mask\": [\"a\"],\n",
      "\"reference\": [\"a\"],\n",
      "\"drawing\": [\"a\"]\n",
      "}\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Updating pype config: applying staged changes\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2022-07-06 16:58:18 +++--------------\n",
      "\n",
      "\n",
      "create_mask\n",
      "- loaded existing annotation of type \"mask\" with ID \"a\": skipping (edit=False)\n",
      "create_reference\n",
      "- loaded existing annotation of type \"reference\" with ID \"a\": skipping (edit=False)\n",
      "threshold\n",
      "- multichannel image supplied, converting to grayscale\n",
      "- decompose image: using gray channel\n",
      "- including pixels from 1 drawn masks \n",
      "- excluding pixels from reference\n",
      "detect_contour\n",
      "- found 4270 contours that match criteria\n",
      "watershed\n",
      "- even kernel size supplied, adding 1 to make odd\n",
      "- found 247 contours that match criteria\n",
      "detect_contour\n",
      "- found 126 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"a\": skipping (edit=False)\n",
      "detect_contour\n",
      "- found 117 contours that match criteria\n",
      "compute_shape_features\n",
      "Stage: add annotation control args\n",
      "compute_texture_features\n",
      "Stage: add annotation control args\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Computing texture features: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 117/117 [00:03<00:00, 29.52it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "select_canvas\n",
      "- raw image\n",
      "draw_contour\n",
      "draw_mask\n",
      "save_annotation\n",
      "- loading existing annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- updating annotations of type \"mask\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"reference\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"drawing\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"contour\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"contour\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"contour\" with id \"c\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- writing annotations of type \"shape_features\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"texture_features\" with id \"a\" to \"annotations_v1.json\"\n",
      "Updating pype config: applying staged changes\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_6\\data\\0__snails1\\canvas_v1.jpg (overwritten).\n",
      "\n",
      "AUTOLOAD\n",
      "- annotations loaded:\n",
      "{\n",
      "\"mask\": [\"a\"],\n",
      "\"reference\": [\"a\"],\n",
      "\"drawing\": [\"a\"]\n",
      "}\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Updating pype config: applying staged changes\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2022-07-06 16:58:26 +++--------------\n",
      "\n",
      "\n",
      "create_mask\n",
      "- loaded existing annotation of type \"mask\" with ID \"a\": skipping (edit=False)\n",
      "create_reference\n",
      "- loaded existing annotation of type \"reference\" with ID \"a\": skipping (edit=False)\n",
      "threshold\n",
      "- multichannel image supplied, converting to grayscale\n",
      "- decompose image: using gray channel\n",
      "- including pixels from 1 drawn masks \n",
      "- excluding pixels from reference\n",
      "detect_contour\n",
      "- found 3620 contours that match criteria\n",
      "watershed\n",
      "- even kernel size supplied, adding 1 to make odd\n",
      "- found 154 contours that match criteria\n",
      "detect_contour\n",
      "- found 83 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"a\": skipping (edit=False)\n",
      "detect_contour\n",
      "- found 73 contours that match criteria\n",
      "compute_shape_features\n",
      "Stage: add annotation control args\n",
      "compute_texture_features\n",
      "Stage: add annotation control args\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Computing texture features: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 73/73 [00:02<00:00, 25.91it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "select_canvas\n",
      "- raw image\n",
      "draw_contour\n",
      "draw_mask\n",
      "save_annotation\n",
      "- loading existing annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- updating annotations of type \"mask\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"reference\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"drawing\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"contour\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"contour\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotations of type \"contour\" with id \"c\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- writing annotations of type \"shape_features\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"texture_features\" with id \"a\" to \"annotations_v1.json\"\n",
      "Updating pype config: applying staged changes\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_6\\data\\0__snails2\\canvas_v1.jpg (overwritten).\n"
     ]
    }
   ],
   "source": [
    "## run image processing with deactivated feedback \n",
    "for path in proj.dir_paths:\n",
    "    pp.Pype(path, tag=\"v1\", feedback=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Created D:\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_6\\results\\annotations\n",
      "Search string: ['annotations_v1']\n",
      "Collected annotations_v1.json from 0__snails1\n",
      "0__snails1_annotations_v1.json saved under D:\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_6\\results\\annotations\\0__snails1_annotations_v1.json.\n",
      "Collected annotations_v1.json from 0__snails2\n",
      "0__snails2_annotations_v1.json saved under D:\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_6\\results\\annotations\\0__snails2_annotations_v1.json.\n"
     ]
    }
   ],
   "source": [
    "proj.collect_results(files=[\"canvas\", \"shape\", \"texture\"], tag=\"v1\", aggregate_csv=True, overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.18"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
