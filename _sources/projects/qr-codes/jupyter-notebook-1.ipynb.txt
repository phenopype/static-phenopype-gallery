{
 "cells": [
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "d74b0e19-7c2c-4864-9c26-30d1f2bb41a7",
   "metadata": {},
   "source": [
    "# Detect QR codes\n",
    "\n",
    "For a more detailed description see: [www.phenopype.org/gallery/projects/qr-codes/](https://www.phenopype.org/gallery/projects/qr-codes/)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c2a5bf9a-e316-4d64-be74-39834ed9ed01",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "phenopype successfully imported the following plugin dependencies:\n",
      "torch\n"
     ]
    }
   ],
   "source": [
    "import phenopype as pp\n",
    "import os \n",
    "import pandas as pd\n",
    "\n",
    "## my root directory - modify as you see fit \n",
    "os.chdir(r\"D:\\science\\packages\\phenopype\\phenopype-gallery_exec\")\n",
    "\n",
    "## set maximum size of phenopype window\n",
    "pp._config.window_max_dim = 800"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "12e0be74-568b-496c-96a1-0cfcb3d89ab4",
   "metadata": {},
   "source": [
    "## Make phenopype project\n",
    "\n",
    "Create a phenopype project (remember, `Project` is used to both create new projects, and load existing ones). Different phenopype projects can be useful, e.g., to process different batches of images from field seasons, perspectives, etc,. It makes sense to create them side by side in a subfolder, which I call \"phenopype\". Thus, my research projects often have the following directory structure (just my way of working - this is really totally up to you):\n",
    "\n",
    "```\n",
    "my-project\n",
    "    data                       # processed data (e.g., tables)\n",
    "    data_raw                   # raw data (images, videos, etc.)\n",
    "    phenopype                  # phenopype projects\n",
    "    phenopype_templates        # phenopype .yaml config templates\n",
    "    scripts                    # python, R, etc.\n",
    "    [...]                      # manuscripts, figures, literature, etc.\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "bd05755a-41be-4021-84f3-7e98ea52511d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------\n",
      "Found existing project root directory - loading from:\n",
      "D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\n",
      "\n",
      "Checks for directory completeness passed!\n",
      "\n",
      "Project \"qr-codes\" successfully loaded with 16 images\n",
      "--------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "proj = pp.Project(r\"phenopype\\qr-codes\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79cb1a02-1894-470f-85b0-c8b50f204753",
   "metadata": {},
   "source": [
    "Add images to the project. `mode=\"link\"` does not copy the raw image, but simply creates a link to save space on the harddrive.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "adf4afe5-d638-4fb0-a69c-8b38440c1571",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------\n",
      "phenopype will search for image files at\n",
      "\n",
      "D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\data_raw\\qr-codes\n",
      "\n",
      "using the following settings:\n",
      "\n",
      "filetypes: ['jpg', 'JPG', 'jpeg', 'JPEG', 'tif', 'png', 'bmp'], include: [], exclude: [], mode: link, recursive: False, resize: False, unique: path\n",
      "\n",
      "Found image 2022_05_17_time_14_01_19_400000_001.tif - phenopype-project folder 0__2022_05_17_time_14_01_19_400000_001 created\n",
      "Found image 2022_05_17_time_14_01_19_400000_002.tif - phenopype-project folder 0__2022_05_17_time_14_01_19_400000_002 created\n",
      "Found image 2022_06_03_time_16_22_01_520000_001.tif - phenopype-project folder 0__2022_06_03_time_16_22_01_520000_001 created\n",
      "Found image 2022_06_03_time_16_22_01_520000_002.tif - phenopype-project folder 0__2022_06_03_time_16_22_01_520000_002 created\n",
      "Found image 2022_06_03_time_16_22_01_520000_003.tif - phenopype-project folder 0__2022_06_03_time_16_22_01_520000_003 created\n",
      "Found image 2022_06_05_time_13_37_59_075000_002.tif - phenopype-project folder 0__2022_06_05_time_13_37_59_075000_002 created\n",
      "Found image 2022_06_05_time_13_37_59_075000_004.tif - phenopype-project folder 0__2022_06_05_time_13_37_59_075000_004 created\n",
      "Found image 2022_06_05_time_13_37_59_075000_008.tif - phenopype-project folder 0__2022_06_05_time_13_37_59_075000_008 created\n",
      "Found image 2022_06_05_time_14_03_47_932000_001.tif - phenopype-project folder 0__2022_06_05_time_14_03_47_932000_001 created\n",
      "Found image 2022_06_05_time_14_03_47_932000_002.tif - phenopype-project folder 0__2022_06_05_time_14_03_47_932000_002 created\n",
      "Found image 2022_06_05_time_14_03_47_932000_006.tif - phenopype-project folder 0__2022_06_05_time_14_03_47_932000_006 created\n",
      "Found image 2022_06_05_time_14_03_47_932000_007.tif - phenopype-project folder 0__2022_06_05_time_14_03_47_932000_007 created\n",
      "Found image 2022_06_05_time_14_03_47_932000_008.tif - phenopype-project folder 0__2022_06_05_time_14_03_47_932000_008 created\n",
      "Found image 2022_06_05_time_14_03_47_932000_009.tif - phenopype-project folder 0__2022_06_05_time_14_03_47_932000_009 created\n",
      "Found image 2022_06_05_time_14_03_47_932000_010.tif - phenopype-project folder 0__2022_06_05_time_14_03_47_932000_010 created\n",
      "Found image 2022_06_05_time_14_03_47_932000_011.tif - phenopype-project folder 0__2022_06_05_time_14_03_47_932000_011 created\n",
      "\n",
      "Found 16 files - using all\n",
      "--------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "proj.add_files(image_dir=\"data_raw\\qr-codes\", mode=\"link\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd6765e2-fe6e-4c03-b476-b37e45a3c3f5",
   "metadata": {},
   "source": [
    "Add a config file for each image:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "dca8218e-b911-464d-87cd-b4178081b07a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_05_17_time_14_01_19_400000_001\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_05_17_time_14_01_19_400000_002\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_03_time_16_22_01_520000_001\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_03_time_16_22_01_520000_002\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_03_time_16_22_01_520000_003\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_13_37_59_075000_002\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_13_37_59_075000_004\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_13_37_59_075000_008\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_14_03_47_932000_001\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_14_03_47_932000_002\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_14_03_47_932000_006\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_14_03_47_932000_007\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_14_03_47_932000_008\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_14_03_47_932000_009\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_14_03_47_932000_010\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_14_03_47_932000_011\\pype_config_v1.yaml\n"
     ]
    }
   ],
   "source": [
    "proj.add_config(template_path=\"phenopype_templates\\qr-codes_template1.yaml\", tag=\"v1\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8837c99f-b066-41c7-9617-b0bf06ead08c",
   "metadata": {},
   "source": [
    "Run the loop with `feedback=False` and phenopype will attempt to automatically detect QR codes without any interaction."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "05242e3f-cecb-426d-ac11-f304c7cbf581",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-11 15:33:09 +++--------------\n",
      "\n",
      "==> image name: 2022_05_17_time_14_01_19_400000_001.tif\n",
      "detect_QRcode\n",
      "empty annotations supplied\n",
      "- rotating image to detect code:\n",
      "  - rotating image - 0 degrees\n",
      "  - rotating image - 20 degrees\n",
      "  - rotating image - 40 degrees\n",
      "  - rotating image - 60 degrees\n",
      "  - rotating image - 80 degrees\n",
      "  - rotating image - 100 degrees\n",
      "  - rotating image - 120 degrees\n",
      "  - rotating image - 140 degrees\n",
      "  - rotating image - 160 degrees\n",
      "  - rotating image - 180 degrees\n",
      "  - rotating image - 200 degrees\n",
      "  - rotating image - 220 degrees\n",
      "  - rotating image - 240 degrees\n",
      "  - rotating image - 260 degrees\n",
      "  - rotating image - 280 degrees\n",
      "  - rotating image - 300 degrees\n",
      "  - rotating image - 320 degrees\n",
      "  - rotating image - 340 degrees\n",
      "- did not find QR-code\n",
      "{'info': {'annotation_type': 'comment', 'phenopype_function': 'detect_QRcode', 'phenopype_version': '4.0.0'}, 'settings': {'rotation_steps': 20, 'angle': 340, 'label_size': 1, 'label_width': 1, 'label_colour': (0, 0, 255), 'GUI': {'feedback': False, 'zoom_memory': False, 'pype_mode': True}}, 'data': {'comment': '', 'label': 'ID', 'mask': []}}\n",
      "draw_QRcode\n",
      "draw_comment\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "export_csv\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- exported csv for type comment\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_05_17_time_14_01_19_400000_001\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-11 15:33:11 +++--------------\n",
      "\n",
      "==> image name: 2022_05_17_time_14_01_19_400000_002.tif\n",
      "detect_QRcode\n",
      "empty annotations supplied\n",
      "- rotating image to detect code:\n",
      "  - rotating image - 0 degrees\n",
      "  - rotating image - 20 degrees\n",
      "  - rotating image - 40 degrees\n",
      "  - rotating image - 60 degrees\n",
      "  - rotating image - 80 degrees\n",
      "  - rotating image - 100 degrees\n",
      "  - rotating image - 120 degrees\n",
      "  - rotating image - 140 degrees\n",
      "  - rotating image - 160 degrees\n",
      "  - rotating image - 180 degrees\n",
      "  - rotating image - 200 degrees\n",
      "  - rotating image - 220 degrees\n",
      "  - rotating image - 240 degrees\n",
      "  - rotating image - 260 degrees\n",
      "  - rotating image - 280 degrees\n",
      "  - rotating image - 300 degrees\n",
      "  - rotating image - 320 degrees\n",
      "  - rotating image - 340 degrees\n",
      "- did not find QR-code\n",
      "{'info': {'annotation_type': 'comment', 'phenopype_function': 'detect_QRcode', 'phenopype_version': '4.0.0'}, 'settings': {'rotation_steps': 20, 'angle': 340, 'label_size': 1, 'label_width': 1, 'label_colour': (0, 0, 255), 'GUI': {'feedback': False, 'zoom_memory': False, 'pype_mode': True}}, 'data': {'comment': '', 'label': 'ID', 'mask': []}}\n",
      "draw_QRcode\n",
      "draw_comment\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "export_csv\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- exported csv for type comment\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_05_17_time_14_01_19_400000_002\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-11 15:33:13 +++--------------\n",
      "\n",
      "==> image name: 2022_06_03_time_16_22_01_520000_001.tif\n",
      "detect_QRcode\n",
      "empty annotations supplied\n",
      "- rotating image to detect code:\n",
      "  - rotating image - 0 degrees\n",
      "found text: 6\n",
      "{'info': {'annotation_type': 'comment', 'phenopype_function': 'detect_QRcode', 'phenopype_version': '4.0.0'}, 'settings': {'rotation_steps': 20, 'angle': 0, 'label_size': 1, 'label_width': 1, 'label_colour': (0, 0, 255), 'GUI': {'feedback': False, 'zoom_memory': False, 'pype_mode': True}}, 'data': {'comment': '6', 'label': 'ID', 'mask': [[(983, 806), (975, 641), (1144, 633), (1144, 802)]]}}\n",
      "draw_QRcode\n",
      "draw_comment\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "export_csv\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- exported csv for type comment\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_03_time_16_22_01_520000_001\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-11 15:33:14 +++--------------\n",
      "\n",
      "==> image name: 2022_06_03_time_16_22_01_520000_002.tif\n",
      "detect_QRcode\n",
      "empty annotations supplied\n",
      "- rotating image to detect code:\n",
      "  - rotating image - 0 degrees\n",
      "found text: 4\n",
      "{'info': {'annotation_type': 'comment', 'phenopype_function': 'detect_QRcode', 'phenopype_version': '4.0.0'}, 'settings': {'rotation_steps': 20, 'angle': 0, 'label_size': 1, 'label_width': 1, 'label_colour': (0, 0, 255), 'GUI': {'feedback': False, 'zoom_memory': False, 'pype_mode': True}}, 'data': {'comment': '4', 'label': 'ID', 'mask': [[(264, 855), (394, 955), (294, 1089), (166, 988)]]}}\n",
      "draw_QRcode\n",
      "draw_comment\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "export_csv\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- exported csv for type comment\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_03_time_16_22_01_520000_002\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-11 15:33:15 +++--------------\n",
      "\n",
      "==> image name: 2022_06_03_time_16_22_01_520000_003.tif\n",
      "detect_QRcode\n",
      "empty annotations supplied\n",
      "- rotating image to detect code:\n",
      "  - rotating image - 0 degrees\n",
      "found text: 5\n",
      "{'info': {'annotation_type': 'comment', 'phenopype_function': 'detect_QRcode', 'phenopype_version': '4.0.0'}, 'settings': {'rotation_steps': 20, 'angle': 0, 'label_size': 1, 'label_width': 1, 'label_colour': (0, 0, 255), 'GUI': {'feedback': False, 'zoom_memory': False, 'pype_mode': True}}, 'data': {'comment': '5', 'label': 'ID', 'mask': [[(801, 1052), (909, 925), (1034, 1035), (922, 1163)]]}}\n",
      "draw_QRcode\n",
      "draw_comment\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "export_csv\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- exported csv for type comment\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_03_time_16_22_01_520000_003\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-11 15:33:16 +++--------------\n",
      "\n",
      "==> image name: 2022_06_05_time_13_37_59_075000_002.tif\n",
      "detect_QRcode\n",
      "empty annotations supplied\n",
      "- rotating image to detect code:\n",
      "  - rotating image - 0 degrees\n",
      "  - rotating image - 20 degrees\n",
      "found text: 9\n",
      "{'info': {'annotation_type': 'comment', 'phenopype_function': 'detect_QRcode', 'phenopype_version': '4.0.0'}, 'settings': {'rotation_steps': 20, 'angle': 20, 'label_size': 1, 'label_width': 1, 'label_colour': (0, 0, 255), 'GUI': {'feedback': False, 'zoom_memory': False, 'pype_mode': True}}, 'data': {'comment': '9', 'label': 'ID', 'mask': [[(307, 507), (343, 671), (184, 708), (145, 543)]]}}\n",
      "draw_QRcode\n",
      "draw_comment\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "export_csv\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- exported csv for type comment\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_13_37_59_075000_002\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-11 15:33:18 +++--------------\n",
      "\n",
      "==> image name: 2022_06_05_time_13_37_59_075000_004.tif\n",
      "detect_QRcode\n",
      "empty annotations supplied\n",
      "- rotating image to detect code:\n",
      "  - rotating image - 0 degrees\n",
      "found text: 12\n",
      "{'info': {'annotation_type': 'comment', 'phenopype_function': 'detect_QRcode', 'phenopype_version': '4.0.0'}, 'settings': {'rotation_steps': 20, 'angle': 0, 'label_size': 1, 'label_width': 1, 'label_colour': (0, 0, 255), 'GUI': {'feedback': False, 'zoom_memory': False, 'pype_mode': True}}, 'data': {'comment': '12', 'label': 'ID', 'mask': [[(718, 1258), (602, 1137), (724, 1018), (833, 1145)]]}}\n",
      "draw_QRcode\n",
      "draw_comment\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "export_csv\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- exported csv for type comment\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_13_37_59_075000_004\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-11 15:33:19 +++--------------\n",
      "\n",
      "==> image name: 2022_06_05_time_13_37_59_075000_008.tif\n",
      "detect_QRcode\n",
      "empty annotations supplied\n",
      "- rotating image to detect code:\n",
      "  - rotating image - 0 degrees\n",
      "found text: 7\n",
      "{'info': {'annotation_type': 'comment', 'phenopype_function': 'detect_QRcode', 'phenopype_version': '4.0.0'}, 'settings': {'rotation_steps': 20, 'angle': 0, 'label_size': 1, 'label_width': 1, 'label_colour': (0, 0, 255), 'GUI': {'feedback': False, 'zoom_memory': False, 'pype_mode': True}}, 'data': {'comment': '7', 'label': 'ID', 'mask': [[(739, 1082), (859, 967), (971, 1090), (850, 1204)]]}}\n",
      "draw_QRcode\n",
      "draw_comment\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "export_csv\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- exported csv for type comment\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_13_37_59_075000_008\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-11 15:33:20 +++--------------\n",
      "\n",
      "==> image name: 2022_06_05_time_14_03_47_932000_001.tif\n",
      "detect_QRcode\n",
      "empty annotations supplied\n",
      "- rotating image to detect code:\n",
      "  - rotating image - 0 degrees\n",
      "  - rotating image - 20 degrees\n",
      "  - rotating image - 40 degrees\n",
      "  - rotating image - 60 degrees\n",
      "  - rotating image - 80 degrees\n",
      "  - rotating image - 100 degrees\n",
      "  - rotating image - 120 degrees\n",
      "  - rotating image - 140 degrees\n",
      "  - rotating image - 160 degrees\n",
      "  - rotating image - 180 degrees\n",
      "  - rotating image - 200 degrees\n",
      "  - rotating image - 220 degrees\n",
      "  - rotating image - 240 degrees\n",
      "  - rotating image - 260 degrees\n",
      "  - rotating image - 280 degrees\n",
      "  - rotating image - 300 degrees\n",
      "  - rotating image - 320 degrees\n",
      "  - rotating image - 340 degrees\n",
      "- did not find QR-code\n",
      "{'info': {'annotation_type': 'comment', 'phenopype_function': 'detect_QRcode', 'phenopype_version': '4.0.0'}, 'settings': {'rotation_steps': 20, 'angle': 340, 'label_size': 1, 'label_width': 1, 'label_colour': (0, 0, 255), 'GUI': {'feedback': False, 'zoom_memory': False, 'pype_mode': True}}, 'data': {'comment': '', 'label': 'ID', 'mask': []}}\n",
      "draw_QRcode\n",
      "draw_comment\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "export_csv\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- exported csv for type comment\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_14_03_47_932000_001\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-11 15:33:23 +++--------------\n",
      "\n",
      "==> image name: 2022_06_05_time_14_03_47_932000_002.tif\n",
      "detect_QRcode\n",
      "empty annotations supplied\n",
      "- rotating image to detect code:\n",
      "  - rotating image - 0 degrees\n",
      "  - rotating image - 20 degrees\n",
      "  - rotating image - 40 degrees\n",
      "found text: 20\n",
      "{'info': {'annotation_type': 'comment', 'phenopype_function': 'detect_QRcode', 'phenopype_version': '4.0.0'}, 'settings': {'rotation_steps': 20, 'angle': 40, 'label_size': 1, 'label_width': 1, 'label_colour': (0, 0, 255), 'GUI': {'feedback': False, 'zoom_memory': False, 'pype_mode': True}}, 'data': {'comment': '20', 'label': 'ID', 'mask': [[(306, 784), (407, 906), (278, 1010), (178, 878)]]}}\n",
      "draw_QRcode\n",
      "draw_comment\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "export_csv\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- exported csv for type comment\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_14_03_47_932000_002\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-11 15:33:24 +++--------------\n",
      "\n",
      "==> image name: 2022_06_05_time_14_03_47_932000_006.tif\n",
      "detect_QRcode\n",
      "empty annotations supplied\n",
      "- rotating image to detect code:\n",
      "  - rotating image - 0 degrees\n",
      "  - rotating image - 20 degrees\n",
      "  - rotating image - 40 degrees\n",
      "  - rotating image - 60 degrees\n",
      "  - rotating image - 80 degrees\n",
      "  - rotating image - 100 degrees\n",
      "  - rotating image - 120 degrees\n",
      "  - rotating image - 140 degrees\n",
      "  - rotating image - 160 degrees\n",
      "  - rotating image - 180 degrees\n",
      "  - rotating image - 200 degrees\n",
      "  - rotating image - 220 degrees\n",
      "  - rotating image - 240 degrees\n",
      "  - rotating image - 260 degrees\n",
      "  - rotating image - 280 degrees\n",
      "  - rotating image - 300 degrees\n",
      "  - rotating image - 320 degrees\n",
      "  - rotating image - 340 degrees\n",
      "- did not find QR-code\n",
      "{'info': {'annotation_type': 'comment', 'phenopype_function': 'detect_QRcode', 'phenopype_version': '4.0.0'}, 'settings': {'rotation_steps': 20, 'angle': 340, 'label_size': 1, 'label_width': 1, 'label_colour': (0, 0, 255), 'GUI': {'feedback': False, 'zoom_memory': False, 'pype_mode': True}}, 'data': {'comment': '', 'label': 'ID', 'mask': []}}\n",
      "draw_QRcode\n",
      "draw_comment\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "export_csv\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- exported csv for type comment\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_14_03_47_932000_006\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-11 15:33:26 +++--------------\n",
      "\n",
      "==> image name: 2022_06_05_time_14_03_47_932000_007.tif\n",
      "detect_QRcode\n",
      "empty annotations supplied\n",
      "- rotating image to detect code:\n",
      "  - rotating image - 0 degrees\n",
      "  - rotating image - 20 degrees\n",
      "  - rotating image - 40 degrees\n",
      "  - rotating image - 60 degrees\n",
      "  - rotating image - 80 degrees\n",
      "  - rotating image - 100 degrees\n",
      "  - rotating image - 120 degrees\n",
      "  - rotating image - 140 degrees\n",
      "  - rotating image - 160 degrees\n",
      "  - rotating image - 180 degrees\n",
      "  - rotating image - 200 degrees\n",
      "  - rotating image - 220 degrees\n",
      "  - rotating image - 240 degrees\n",
      "  - rotating image - 260 degrees\n",
      "  - rotating image - 280 degrees\n",
      "  - rotating image - 300 degrees\n",
      "  - rotating image - 320 degrees\n",
      "  - rotating image - 340 degrees\n",
      "- did not find QR-code\n",
      "{'info': {'annotation_type': 'comment', 'phenopype_function': 'detect_QRcode', 'phenopype_version': '4.0.0'}, 'settings': {'rotation_steps': 20, 'angle': 340, 'label_size': 1, 'label_width': 1, 'label_colour': (0, 0, 255), 'GUI': {'feedback': False, 'zoom_memory': False, 'pype_mode': True}}, 'data': {'comment': '', 'label': 'ID', 'mask': []}}\n",
      "draw_QRcode\n",
      "draw_comment\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "export_csv\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- exported csv for type comment\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_14_03_47_932000_007\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-11 15:33:29 +++--------------\n",
      "\n",
      "==> image name: 2022_06_05_time_14_03_47_932000_008.tif\n",
      "detect_QRcode\n",
      "empty annotations supplied\n",
      "- rotating image to detect code:\n",
      "  - rotating image - 0 degrees\n",
      "found text: 7\n",
      "{'info': {'annotation_type': 'comment', 'phenopype_function': 'detect_QRcode', 'phenopype_version': '4.0.0'}, 'settings': {'rotation_steps': 20, 'angle': 0, 'label_size': 1, 'label_width': 1, 'label_colour': (0, 0, 255), 'GUI': {'feedback': False, 'zoom_memory': False, 'pype_mode': True}}, 'data': {'comment': '7', 'label': 'ID', 'mask': [[(978, 835), (976, 667), (1141, 667), (1145, 833)]]}}\n",
      "draw_QRcode\n",
      "draw_comment\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "export_csv\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- exported csv for type comment\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_14_03_47_932000_008\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-11 15:33:30 +++--------------\n",
      "\n",
      "==> image name: 2022_06_05_time_14_03_47_932000_009.tif\n",
      "detect_QRcode\n",
      "empty annotations supplied\n",
      "- rotating image to detect code:\n",
      "  - rotating image - 0 degrees\n",
      "  - rotating image - 20 degrees\n",
      "found text: 24\n",
      "{'info': {'annotation_type': 'comment', 'phenopype_function': 'detect_QRcode', 'phenopype_version': '4.0.0'}, 'settings': {'rotation_steps': 20, 'angle': 20, 'label_size': 1, 'label_width': 1, 'label_colour': (0, 0, 255), 'GUI': {'feedback': False, 'zoom_memory': False, 'pype_mode': True}}, 'data': {'comment': '24', 'label': 'ID', 'mask': [[(1058, 849), (1066, 681), (1232, 690), (1222, 858)]]}}\n",
      "draw_QRcode\n",
      "draw_comment\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "export_csv\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- exported csv for type comment\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_14_03_47_932000_009\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-11 15:33:31 +++--------------\n",
      "\n",
      "==> image name: 2022_06_05_time_14_03_47_932000_010.tif\n",
      "detect_QRcode\n",
      "empty annotations supplied\n",
      "- rotating image to detect code:\n",
      "  - rotating image - 0 degrees\n",
      "found text: 13\n",
      "{'info': {'annotation_type': 'comment', 'phenopype_function': 'detect_QRcode', 'phenopype_version': '4.0.0'}, 'settings': {'rotation_steps': 20, 'angle': 0, 'label_size': 1, 'label_width': 1, 'label_colour': (0, 0, 255), 'GUI': {'feedback': False, 'zoom_memory': False, 'pype_mode': True}}, 'data': {'comment': '13', 'label': 'ID', 'mask': [[(861, 103), (843, 271), (679, 251), (699, 84)]]}}\n",
      "draw_QRcode\n",
      "draw_comment\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "export_csv\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- exported csv for type comment\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_14_03_47_932000_010\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-11 15:33:33 +++--------------\n",
      "\n",
      "==> image name: 2022_06_05_time_14_03_47_932000_011.tif\n",
      "detect_QRcode\n",
      "empty annotations supplied\n",
      "- rotating image to detect code:\n",
      "  - rotating image - 0 degrees\n",
      "found text: 23\n",
      "{'info': {'annotation_type': 'comment', 'phenopype_function': 'detect_QRcode', 'phenopype_version': '4.0.0'}, 'settings': {'rotation_steps': 20, 'angle': 0, 'label_size': 1, 'label_width': 1, 'label_colour': (0, 0, 255), 'GUI': {'feedback': False, 'zoom_memory': False, 'pype_mode': True}}, 'data': {'comment': '23', 'label': 'ID', 'mask': [[(827, 952), (941, 836), (1060, 954), (943, 1071)]]}}\n",
      "draw_QRcode\n",
      "draw_comment\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"comment\" with id \"a\" to \"annotations_v1.json\"\n",
      "export_csv\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- exported csv for type comment\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\qr-codes\\data\\0__2022_06_05_time_14_03_47_932000_011\\canvas_v1.jpg.\n"
     ]
    }
   ],
   "source": [
    "for path in proj.dir_paths: \n",
    "    p = pp.Pype(path, \"v1\", \n",
    "                feedback=False,             # turn off feedback for automatic mode \n",
    "                autoshow=False,             # set to False to not have to confirm the end of an iteration with CTRL+Enter\n",
    "                # skip=\"comment\",           # set to True to skip to next non-processed image \n",
    "                )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a6cee6eb-096c-4756-a8bd-6dfa77cda31a",
   "metadata": {},
   "source": [
    "Collect the results and concatenate them to a single file, or in case of the canvas, store them to a single folder."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "86ece019-9e14-4581-9fdb-924ee1ab5405",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "file \"canvas\": found 16 results in 16 project folders\n",
      "file \"comment\": found 16 results in 16 project folders\n",
      "Saving file comment_v1.csv\n"
     ]
    }
   ],
   "source": [
    "proj.collect_results(files=[\"canvas\", \"comment\"], tag=\"v1\", aggregate_csv=True, overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "63f566e6-4a07-40c0-b793-c5947b374868",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>image_name</th>\n",
       "      <th>annotation_type</th>\n",
       "      <th>annotation_id</th>\n",
       "      <th>ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022_05_17_time_14_01_19_400000_001.tif</td>\n",
       "      <td>comment</td>\n",
       "      <td>a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022_05_17_time_14_01_19_400000_002.tif</td>\n",
       "      <td>comment</td>\n",
       "      <td>a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022_06_03_time_16_22_01_520000_001.tif</td>\n",
       "      <td>comment</td>\n",
       "      <td>a</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022_06_03_time_16_22_01_520000_002.tif</td>\n",
       "      <td>comment</td>\n",
       "      <td>a</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022_06_03_time_16_22_01_520000_003.tif</td>\n",
       "      <td>comment</td>\n",
       "      <td>a</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2022_06_05_time_14_03_47_932000_007.tif</td>\n",
       "      <td>comment</td>\n",
       "      <td>a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2022_06_05_time_14_03_47_932000_008.tif</td>\n",
       "      <td>comment</td>\n",
       "      <td>a</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2022_06_05_time_14_03_47_932000_009.tif</td>\n",
       "      <td>comment</td>\n",
       "      <td>a</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2022_06_05_time_14_03_47_932000_010.tif</td>\n",
       "      <td>comment</td>\n",
       "      <td>a</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2022_06_05_time_14_03_47_932000_011.tif</td>\n",
       "      <td>comment</td>\n",
       "      <td>a</td>\n",
       "      <td>23.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>16 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                 image_name annotation_type annotation_id  \\\n",
       "0   2022_05_17_time_14_01_19_400000_001.tif         comment             a   \n",
       "1   2022_05_17_time_14_01_19_400000_002.tif         comment             a   \n",
       "2   2022_06_03_time_16_22_01_520000_001.tif         comment             a   \n",
       "3   2022_06_03_time_16_22_01_520000_002.tif         comment             a   \n",
       "4   2022_06_03_time_16_22_01_520000_003.tif         comment             a   \n",
       "..                                      ...             ...           ...   \n",
       "11  2022_06_05_time_14_03_47_932000_007.tif         comment             a   \n",
       "12  2022_06_05_time_14_03_47_932000_008.tif         comment             a   \n",
       "13  2022_06_05_time_14_03_47_932000_009.tif         comment             a   \n",
       "14  2022_06_05_time_14_03_47_932000_010.tif         comment             a   \n",
       "15  2022_06_05_time_14_03_47_932000_011.tif         comment             a   \n",
       "\n",
       "      ID  \n",
       "0    NaN  \n",
       "1    NaN  \n",
       "2    6.0  \n",
       "3    4.0  \n",
       "4    5.0  \n",
       "..   ...  \n",
       "11   NaN  \n",
       "12   7.0  \n",
       "13  24.0  \n",
       "14  13.0  \n",
       "15  23.0  \n",
       "\n",
       "[16 rows x 4 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "comments = pd.read_csv(os.path.join(proj.root_dir, \"results\", \"comment_v1.csv\"))\n",
    "print(comments)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "878de592-d9bc-4a75-b686-a4d79619e4a4",
   "metadata": {},
   "source": [
    "## Fix failed detections\n",
    "\n",
    "As you can see, the approach did not always work; either because there was no QR code in the image, or it was obscured by the damselfly or shadows. You now have a couple of options: \n",
    "\n",
    "1. Add the argument `enter_manually: True` to the template and run it again. (uncomment line 6 in the provided template)\n",
    "2. Find the images where QR-code detection failed and run them again with the template for the id-tags project\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d3d48590-146b-4922-a5ea-ffb4aecfd844",
   "metadata": {},
   "outputs": [],
   "source": [
    "## option 1\n",
    "## first, edit the template: under \"detect_QRcode\", set \"enter_manually: True\" \n",
    "## then, add the new config to the project \n",
    "proj.add_config(template_path=\"phenopype_templates\\qr-codes-template1.yml\", tag=\"v1\", overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d430f49f-dfe9-40b0-9946-010dd99259cc",
   "metadata": {},
   "outputs": [],
   "source": [
    "## run the project again\n",
    "for path in proj.dir_paths: \n",
    "    p = pp.Pype(path, \"v1\", \n",
    "                feedback=True,              # needs to be on now!\n",
    "                autoshow=False,             # set to False to not have to confirm the end of an iteration with CTRL+Enter\n",
    "                # skip=\"comment\",           # set to True to skip to next non-processed image \n",
    "                )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4c86bca6-723e-400f-943c-1bb8d3ca946a",
   "metadata": {},
   "outputs": [],
   "source": [
    "## option 2 \n",
    "## first, make a list\n",
    "failed_img_paths = list()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7b37011f-faab-4637-890e-9da8e2d949cd",
   "metadata": {},
   "outputs": [],
   "source": [
    "## step 1 - find images where QR-code detection failed - either by looping through the project folders directly...\n",
    "for path in proj.dir_paths:\n",
    "    if not \"annotations_v1.json\" in os.listdir(path):\n",
    "        failed_img_paths.append(path)\n",
    "        \n",
    "## ... or by finding the rows in the results file\n",
    "comments = pd.read_csv(r\"phenopype\\qr-codes\\results\\comment_v1.csv\")\n",
    "failed_imgs = list(comments[pd.isna(comments[\"ID\"])][\"image_name\"])\n",
    "for img, path in zip(proj.file_names, proj.dir_paths):\n",
    "    if img in failed_imgs:\n",
    "        failed_img_paths.append(path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ae34fd57-5746-46d3-a94c-2ea4f53009bc",
   "metadata": {},
   "outputs": [],
   "source": [
    "## step 2 - give only failed image new config (can also be done using new config file (e.g., \"v2\"))\n",
    "proj.add_config(tag=\"v1\", subset=failed_img_paths, \n",
    "                template_path=\"phenopype_templates\\it-tags-template1.yml\", overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8171732c-a9cb-42af-bd2c-ae02433f8bc9",
   "metadata": {},
   "outputs": [],
   "source": [
    "## step 3 - second run: manual ID entry\n",
    "for idx, path in enumerate(failed_img_paths):\n",
    "    pp.Pype(path, tag=\"v1\", autoshow=False) #autosave=False, overwrite=True, feedback=False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6e748811-25cf-4a7d-ae5b-a3b63d866674",
   "metadata": {},
   "outputs": [],
   "source": [
    "proj.collect_results(files=[\"canvas\", \"comment\"], tag=\"v1\", save_suffix=\"fixed\", aggregate_csv=True, overwrite=True)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.18"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
