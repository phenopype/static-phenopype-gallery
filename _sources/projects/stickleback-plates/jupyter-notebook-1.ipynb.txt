{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Stickleback armor plates\n",
    "\n",
    "For a more detailed description see: <https://www.phenopype.org/gallery/projects/stickleback-plates/>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "phenopype successfully imported the following plugin dependencies:\n",
      "torch\n"
     ]
    }
   ],
   "source": [
    "import phenopype as pp\n",
    "import os \n",
    "\n",
    "## my root directory - modify as you see fit \n",
    "os.chdir(r\"D:\\science\\packages\\phenopype\\phenopype-gallery_exec\")\n",
    "\n",
    "## my laptop has a small screen, so I use a smaller phenopype window\n",
    "pp._config.window_max_dim = 800"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Make phenopype project\n",
    "\n",
    "Create a phenopype project (remember, `Project` is used to both create new projects, and load existing ones). Different phenopype projects can be useful, e.g., to process different batches of images from field seasons, perspectives, etc,. It makes sense to create them side by side in a subfolder, which I call \"phenopype\". Thus, my research projects often have the following directory structure (just my way of working - this is really totally up to you):\n",
    "\n",
    "```\n",
    "my-project\n",
    "    data                       # processed data (e.g., tables)\n",
    "    data_raw                   # raw data (images, videos, etc.)\n",
    "    phenopype                  # phenopype projects\n",
    "    phenopype_templates        # phenopype .yaml config templates\n",
    "    scripts                    # python, R, etc.\n",
    "    [...]                      # manuscripts, figures, literature, etc.\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------\n",
      "Creating a new phenopype project directory at:\n",
      "D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\stickleback-plates\n",
      "\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Proceed? (y/n)\n",
      " y\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Project \"stickleback-plates\" successfully created.\n",
      "--------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "proj = pp.Project(r\"phenopype\\stickleback-plates\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------\n",
      "phenopype will search for image files at\n",
      "\n",
      "D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\data_raw\\stickleback-plates\n",
      "\n",
      "using the following settings:\n",
      "\n",
      "filetypes: ['jpg', 'JPG', 'jpeg', 'JPEG', 'tif', 'png', 'bmp'], include: [], exclude: side, mode: copy, recursive: False, resize: False, unique: path\n",
      "\n",
      "Found image stickle1.jpg - phenopype-project folder 0__stickle1 created\n",
      "Found image stickle2.jpg - phenopype-project folder 0__stickle2 created\n",
      "Found image stickle3.jpg - phenopype-project folder 0__stickle3 created\n",
      "\n",
      "Found 3 files - using all\n",
      "--------------------------------------------\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\stickleback-plates\\data\\0__stickle1\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\stickleback-plates\\data\\0__stickle2\\pype_config_v1.yaml\n",
      "- template saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\stickleback-plates\\data\\0__stickle3\\pype_config_v1.yaml\n"
     ]
    }
   ],
   "source": [
    "proj.add_files(image_dir = r\"data_raw\\stickleback-plates\", exclude=\"side\")\n",
    "proj.add_config(template_path=r\"phenopype_templates\\stickleback-plates_template1.yaml\", tag=\"v1\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Updating pype config: applying staged changes\n",
      "- starting config file monitor\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-14 15:36:41 +++--------------\n",
      "\n",
      "==> image name: stickle1.jpg\n",
      "\n",
      "\n",
      "PREPROCESSING\n",
      "create_mask\n",
      "poly\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "threshold\n",
      "- decompose image: using green channel\n",
      "morphology\n",
      "detect_contour\n",
      "- found 5 contours that match criteria\n",
      "watershed\n",
      "- even kernel size supplied, adding 1 to make odd\n",
      "- found 16 contours that match criteria\n",
      "detect_contour\n",
      "- found 13 contours that match criteria\n",
      "edit_contour\n",
      "detect_contour\n",
      "- found 16 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "select_canvas\n",
      "- green channel\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "edit_contour\n",
      "detect_contour\n",
      "- found 16 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "select_canvas\n",
      "- green channel\n",
      "draw_contour\n",
      "draw_mask\n",
      "\n",
      "\n",
      "EXPORT\n",
      "save_annotation\n",
      "- creating new annotation file\n",
      "- no annotation_type selected - exporting all annotations\n",
      "- writing annotations of type \"mask\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"contour\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"contour\" with id \"b\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"contour\" with id \"c\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"contour\" with id \"d\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"drawing\" with id \"a\" to \"annotations_v1.json\"\n",
      "- writing annotations of type \"drawing\" with id \"b\" to \"annotations_v1.json\"\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "AUTOSHOW\n",
      "\n",
      "\n",
      "TERMINATE\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\science\\packages\\phenopype\\phenopype-gallery_exec\\phenopype\\stickleback-plates\\data\\0__stickle1\\canvas_v1.jpg.\n",
      "\n",
      "AUTOLOAD\n",
      " - nothing to autoload\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Stage: add annotation control args\n",
      "Updating pype config: applying staged changes\n",
      "- starting config file monitor\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2023-11-14 15:37:32 +++--------------\n",
      "\n",
      "==> image name: stickle2.jpg\n",
      "\n",
      "\n",
      "PREPROCESSING\n",
      "create_mask\n"
     ]
    },
    {
     "ename": "SystemExit",
     "evalue": "\n\nTERMINATE (by user)",
     "output_type": "error",
     "traceback": [
      "An exception has occurred, use %tb to see the full traceback.\n",
      "\u001b[1;31mSystemExit\u001b[0m\u001b[1;31m:\u001b[0m \n\nTERMINATE (by user)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\miniforge3\\envs\\pp-dev\\lib\\site-packages\\IPython\\core\\interactiveshell.py:3534: UserWarning: To exit: use 'exit', 'quit', or Ctrl-D.\n",
      "  warn(\"To exit: use 'exit', 'quit', or Ctrl-D.\", stacklevel=1)\n"
     ]
    }
   ],
   "source": [
    "## run image processing\n",
    "for path in proj.dir_paths:\n",
    "    pp.Pype(path, tag=\"v1\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Edit config to extract shape features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "target1 = \"\"\"    - measurement:\"\"\"\n",
    "replacement1 = \"\"\"    - measurement:\n",
    "        - compute_shape_features:\n",
    "            features: [basic, moments, hu_moments]\"\"\"\n",
    "\n",
    "proj.edit_config(tag=\"v1\", target=target1, replacement=replacement1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Format path to abspath\n",
      "- no annotation_type selected - returning all annotations\n",
      "\n",
      "AUTOLOAD\n",
      "- annotations loaded:\n",
      "{\n",
      "\"contour\": [\"a\", \"b\", \"c\", \"d\"],\n",
      "\"drawing\": [\"a\", \"b\"],\n",
      "\"mask\": [\"a\"],\n",
      "\"shape_features\": [\"a\"]\n",
      "}\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2022-01-17 22:16:19 +++--------------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "PREPROCESSING\n",
      "create_mask\n",
      "- loaded existing annotation of type \"mask\" with ID \"a\": skipping (edit=False)\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "threshold\n",
      "- decompose image: using red channel\n",
      "- including pixels from 1 drawn masks \n",
      "morphology\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"a\": overwriting (edit=overwrite)\n",
      "- found 4 contours that match criteria\n",
      "watershed\n",
      "- even kernel size supplied, adding 1 to make odd\n",
      "- found 12 contours that match criteria\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"b\": overwriting (edit=overwrite)\n",
      "- found 9 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"a\": editing (edit=True)\n",
      "BIER\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"c\": overwriting (edit=overwrite)\n",
      "- found 15 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "select_canvas\n",
      "- red channel\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"b\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"d\": overwriting (edit=overwrite)\n",
      "- found 15 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "select_canvas\n",
      "- red channel\n",
      "draw_contour\n",
      "draw_mask\n",
      "\n",
      "\n",
      "EXPORT\n",
      "save_annotation\n",
      "- loading existing annotation file\n",
      "- updating annotation of type \"contour\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"c\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"d\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"drawing\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"drawing\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"mask\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"shape_features\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "TERMINATE\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\workspace\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_3\\project\\data\\0__stickle1\\canvas_v1.jpg (overwritten).\n",
      "Format path to abspath\n",
      "- no annotation_type selected - returning all annotations\n",
      "\n",
      "AUTOLOAD\n",
      "- annotations loaded:\n",
      "{\n",
      "\"mask\": [\"a\"],\n",
      "\"contour\": [\"a\", \"b\", \"c\", \"d\"],\n",
      "\"drawing\": [\"a\", \"b\"],\n",
      "\"shape_features\": [\"a\"]\n",
      "}\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2022-01-17 22:16:20 +++--------------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "PREPROCESSING\n",
      "create_mask\n",
      "- loaded existing annotation of type \"mask\" with ID \"a\": skipping (edit=False)\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "threshold\n",
      "- decompose image: using red channel\n",
      "- including pixels from 1 drawn masks \n",
      "morphology\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"a\": overwriting (edit=overwrite)\n",
      "- found 1 contours that match criteria\n",
      "watershed\n",
      "- even kernel size supplied, adding 1 to make odd\n",
      "- found 7 contours that match criteria\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"b\": overwriting (edit=overwrite)\n",
      "- found 5 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"a\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"c\": overwriting (edit=overwrite)\n",
      "- found 5 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "select_canvas\n",
      "- red channel\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"b\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"d\": overwriting (edit=overwrite)\n",
      "- found 12 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "select_canvas\n",
      "- red channel\n",
      "draw_contour\n",
      "draw_mask\n",
      "\n",
      "\n",
      "EXPORT\n",
      "save_annotation\n",
      "- loading existing annotation file\n",
      "- updating annotation of type \"mask\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"c\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"d\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"drawing\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"drawing\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"shape_features\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "TERMINATE\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\workspace\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_3\\project\\data\\0__stickle2\\canvas_v1.jpg (overwritten).\n",
      "Format path to abspath\n",
      "- no annotation_type selected - returning all annotations\n",
      "\n",
      "AUTOLOAD\n",
      "- annotations loaded:\n",
      "{\n",
      "\"mask\": [\"a\"],\n",
      "\"contour\": [\"a\", \"b\", \"c\", \"d\"],\n",
      "\"drawing\": [\"a\", \"b\"],\n",
      "\"shape_features\": [\"a\"]\n",
      "}\n",
      "\n",
      "\n",
      "------------+++ new pype iteration 2022-01-17 22:16:21 +++--------------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "PREPROCESSING\n",
      "create_mask\n",
      "- loaded existing annotation of type \"mask\" with ID \"a\": skipping (edit=False)\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "threshold\n",
      "- decompose image: using red channel\n",
      "- including pixels from 1 drawn masks \n",
      "morphology\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"a\": overwriting (edit=overwrite)\n",
      "- found 12 contours that match criteria\n",
      "watershed\n",
      "- even kernel size supplied, adding 1 to make odd\n",
      "- found 5 contours that match criteria\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"b\": overwriting (edit=overwrite)\n",
      "- found 4 contours that match criteria\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"a\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"c\": overwriting (edit=overwrite)\n",
      "- found 4 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "select_canvas\n",
      "- red channel\n",
      "\n",
      "\n",
      "SEGMENTATION\n",
      "edit_contour\n",
      "- loaded existing annotation of type \"drawing\" with ID \"b\": skipping (edit=False)\n",
      "detect_contour\n",
      "- loaded existing annotation of type \"contour\" with ID \"d\": overwriting (edit=overwrite)\n",
      "- found 15 contours that match criteria\n",
      "\n",
      "\n",
      "VISUALIZATION\n",
      "select_canvas\n",
      "- red channel\n",
      "draw_contour\n",
      "draw_mask\n",
      "\n",
      "\n",
      "EXPORT\n",
      "save_annotation\n",
      "- loading existing annotation file\n",
      "- updating annotation of type \"mask\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"c\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"contour\" with id \"d\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"drawing\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"drawing\" with id \"b\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "- updating annotation of type \"shape_features\" with id \"a\" in \"annotations_v1.json\" (overwrite=\"entry\")\n",
      "\n",
      "\n",
      "------------+++ finished pype iteration +++--------------\n",
      "-------(End with Ctrl+Enter or re-run with Enter)--------\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "TERMINATE\n",
      "\n",
      "AUTOSAVE\n",
      "- save_canvas\n",
      "- image saved under D:\\workspace\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_3\\project\\data\\0__stickle3\\canvas_v1.jpg (overwritten).\n"
     ]
    }
   ],
   "source": [
    "## run image processing with deactivated feedback \n",
    "for path in proj.dir_paths:\n",
    "    pp.Pype(path, tag=\"v1\", feedback=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Created D:\\workspace\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_3\\project\\results\\annotations\n",
      "Search string: ['annotations_v1']\n",
      "Collected annotations_v1.json from 0__stickle1\n",
      "0__stickle1_annotations_v1.json saved under D:\\workspace\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_3\\project\\results\\annotations\\0__stickle1_annotations_v1.json.\n",
      "Collected annotations_v1.json from 0__stickle2\n",
      "0__stickle2_annotations_v1.json saved under D:\\workspace\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_3\\project\\results\\annotations\\0__stickle2_annotations_v1.json.\n",
      "Collected annotations_v1.json from 0__stickle3\n",
      "0__stickle3_annotations_v1.json saved under D:\\workspace\\git-repos\\phenopype\\phenopype-gallery\\_temp\\project_3\\project\\results\\annotations\\0__stickle3_annotations_v1.json.\n"
     ]
    }
   ],
   "source": [
    "proj.collect_results(files=[\"canvas\", \"landmark\"], tag=\"v1\", aggregate_csv=True, overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.18"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
